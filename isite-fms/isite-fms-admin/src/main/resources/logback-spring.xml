<?xml version="1.0" encoding="UTF-8"?>
<!--
    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="false" debug="false">
    <property name="LOG_PATH" value="/data/logs" />
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %logger：输出日志的logger名 %msg：日志消息，%n是换行符 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%file:%line] - %msg%n"/>

    <!--控制台-->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <!--解决乱码问题-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--滚动文件-->
    <appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--ThresholdFilter:过滤掉级别低的日志 TRACE < DEBUG < INFO <  WARN < ERROR-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/@project.artifactId@.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory><!--保存最近30天的日志-->
            <totalSizeCap>20GB</totalSizeCap><!--所有的日志文件最大20G，超过就会删除旧的日志-->
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>[@project.artifactId@]-${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--配置多环境日志输出  可以在application.properties中配置选择哪个profiles: spring.profiles.active=dev-->
    <springProfile name="dev">
        <root level="info">
            <!--开发环境:打印控制台-->
            <appender-ref ref="stdout" />
            <appender-ref ref="logFile" />
        </root>
    </springProfile>
    <springProfile name="test">
        <root level="debug">
            <appender-ref ref="stdout" />
            <appender-ref ref="logFile" />
        </root>
    </springProfile>
    <!--生产环境:输出到文件-->
    <springProfile name="pro">
        <root level="error">
            <appender-ref ref="logFile" />
        </root>
    </springProfile>
</configuration>